{
  "name": "hapi-job-queue",
  "version": "0.5.0",
  "description": "A hapi and mongodb powered job queue",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/lab -l -C test/*.test.js && ./node_modules/.bin/lab -r lcov -l -C test/*.test.js | ./node_modules/.bin/coveralls"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/firstandthird/hapi-job-queue.git"
  },
  "keywords": [
    "hapi",
    "job",
    "queue",
    "mongodb",
    "scheduled",
    "tasks"
  ],
  "author": {
    "name": "First+Third"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/firstandthird/hapi-job-queue/issues"
  },
  "homepage": "https://github.com/firstandthird/hapi-job-queue",
  "dependencies": {
    "async": "0.9.0",
    "boom": "2.6.1",
    "hoek": "2.12.0",
    "later": "1.1.6",
    "lodash": "3.8.0",
    "mongodb": "2.0.25"
  },
  "devDependencies": {
    "code": "1.4.0",
    "coveralls": "2.11.2",
    "grunt": "0.4.5",
    "grunt-concurrent": "1.0.0",
    "grunt-contrib-jshint": "0.11.2",
    "grunt-contrib-watch": "0.6.1",
    "grunt-shell": "1.1.2",
    "hapi": "8.4.0",
    "hapi-auth-bearer-token": "3.1.1",
    "joi": "6.4.1",
    "lab": "5.8.0",
    "load-grunt-config": "0.17.1"
  },
  "readme": "# hapi-job-queue\nHapi and MongoDB powered job queue.\n\n[![Build Status](https://travis-ci.org/firstandthird/hapi-job-queue.svg?branch=master)](https://travis-ci.org/firstandthird/hapi-job-queue)\n[![Coverage Status](https://coveralls.io/repos/firstandthird/hapi-job-queue/badge.svg?branch=master)](https://coveralls.io/r/firstandthird/hapi-job-queue?branch=master)\n\n\n### Features:\n\n - Utilizes server methods for jobs\n - Jobs can be grouped together by name\n - Jobs or groups can be run in intervals using the [later](http://bunkat.github.io/later/parsers.html#cron) cron and text syntax.\n - Optional JSON api to control jobs\n - Jobs contain tasks to run. By default a job has just one task with no data. Job will run once for each task.\n\n### Install:\n\n```\nnpm install hapi-job-queue --save\n```\n\n### Usage:\n\n```js\nvar server = new Hapi.Server();\nvar mongoUrl = 'mongodb://localhost:27017/something';\n\nserver.connection({port: 3000});\n\nserver.method('emailUsers', function(data, done) {\n  server.plugins.emailService.spam(data.group, done);\n});\n\nserver.register([\n  { register: require('hapi-job-queue'), options: {\n    connectionUrl: mongoUrl,\n    endpoint: '',\n    jobs: [\n      {\n        name: 'email-users',\n        enabled: true,\n        schedule: 'on the last day of the month',\n        method: 'emailUsers', //server method\n        tasks: [ // each task will run 'emailUsers' with the task as the data property\n          {\n            group: 'pendingUsers'\n          },\n          {\n            group: 'approvedUsers'\n          },\n          {\n            group: 'newsletterUsers'\n          }\n        ]\n      }\n    ]\n  } }\n], function() {\n  // server start etc...\n});\n```\n\n#### Options:\n\n - `connectionUrl` - mongodb connection url\n - `endpoint` - Path for api endpoint. Set to false to disable. No trailing slash. (default: false)\n - `auth` - Auth strategy to use for api endpoints. (default: false)\n - `concurrentTasks` - Number of instances of `method` that can run simultaneously. Note: This is limited on a per job basis. Two jobs running at the same time will each have a max of `concurrentTasks`. (default: 5)\n - `collection` - DB collection to use. (default: Jobs)\n - `verbose` - Extra logging. Tagged `hapi-job-queue, info`. (default: true)\n - `jobs` - Array of job objects.\n  - `name` - Name of the job. Used in api endpoints and methods.\n  - `enabled` - Enables or disables a job.\n  - `single` - Set to true if this job will be manually run and not on a timer. (default false)\n  - `schedule` - (optional) [Later](http://bunkat.github.io/later/parsers.html) style time definition.\n  - `cron` - (optional) [Later](http://bunkat.github.io/later/parsers.html) style cron definition.\n  - `cronSeconds` - (optional) Use if the above cron setting is in seconds.\n  - `method` - Method to run for each task or once when no tasks are assigned. Can be a hapi server method or a function. `function(data, callback)`\n  - `tasks` - (optional) Array of data to be passed to job method. Each item in the array will spawn an instance of `method`.\n\n#### Methods:\n\nThese methods can be found in `server.plugins.jobs`.\n\n - `addJob` - params: `job`, `callback(err)` - Adds a job. Uses same job format as options.\n - `getJobs` - params: `callback(err)` - Returns all jobs\n - `enableJob` - params: `jobName`, `callback(err)` - Enables a job.\n - `disableJob` - params: `jobName`, `callback(err)` - Disables a job.\n - `runSingle` - params: `jobName`, `tasks`, `callback(err)` - Runs a single job. Tasks uses the same task format in options.\n\n#### API\n\nIf you enable the web api these endpoints will be exposed.\n\n - `GET /` - Returns all jobs.\n - `GET /enable/{jobName}` - Enables a job\n - `GET /disable/{jobName}` - Disables a job\n - `POST /run/{jobName}` - Runs a job. Accepts a json payload of task data.\n",
  "readmeFilename": "README.md",
  "_id": "hapi-job-queue@0.5.0",
  "_from": "hapi-job-queue@~0.5.0"
}
